
Plateau :

  - Structure :
    - tailleX compris entre 3 et +infini, correspont à la longueur du plateau
    - tailleY compris entre 3 et +infini, correspont à la largeur du plateau
    - mat[tailleX][tailleY] contient les cases du plateau

  - Comportement :
    - afficheTerminal() affiche le plateau sur le terminal
    - affiche() affiche le plateau
    - equals(solution : Plateau) : retourne vrai si le plateau est égal à solution
    - createPontBetween(ile1 : Ile, ile2 :Ile) : crée un pont entre ile1 et ile2, retourne vrai si le pont peut etre placé
   
Case :

  - Structure
    - posX compris entre 0 et Plateau.tailleX -1 correspond à la position en abscisse de l'ile
    - posY compris entre 0 et Plateau.tailleY -1 correspond à la position en ordonnée de l'ile
    - plateau contient le plateau sur lequel se trouve la case
  
  - Comportement
    - onClick() ne fais rien
    - afficheTerminal() affiche la case sur le terminal
    - affiche() affiche la case
    - equals(objet : Case) : retourne vrai si la case est égal à objet




Ile :

  - Structure
    - valeur compris entre 1 et 8 correspond au nombre de pont que doit possèder l'ile
    
  
  - Comportement
    - estValide?(mat : Case[tailleX][tailleY]) retourne vrai si la somme des ponts qui l'entourent dans sa direction est égal à valeur
    - chercheVoisins() retourne la liste des 4 voisins
    - onClick() rajoute un pont entre cette ile et la prochaine ile sur laquelle on clickera si elles sont voisines
